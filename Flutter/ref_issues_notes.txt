[Indentify if Text Overflows]
https://stackoverflow.com/questions/51114778/how-to-check-if-flutter-text-widget-was-overflowed

[Identify if Widget Visible in ViewPort]
https://stackoverflow.com/questions/51069712/how-to-know-if-a-widget-is-visible-within-a-viewport

[TextFormField Height]
https://stackoverflow.com/questions/56674596/validator-error-message-changes-textformfields-height#:~:text=To%20apply%20custom%20height%20to,constraints%2C%20contentPadding%20%2C%20and%20isDense%20.

[Overlay and Touch Events Beneath]
https://stackoverflow.com/questions/66735676/flutter-how-to-pass-scroll-event-under-overlay

[Stack and Overflow]
https://github.com/flutter/flutter/issues/19445

// REGION
          SizedBox(
            width: 240,
            //height: 40,
            child: Column(
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                
                const SizedBox(height: 4),
                // FIELD
                TextFormField(
                  //onChanged: (value) => _regionVal = value,
                  onChanged: _onChangedRegionVal,
                  initialValue: widget.regionModel.name,
                  validator: (_){
                    print('Sakura > Validating $_regionVal');
                    return _regionVal.trim().isEmpty ? "Required" : null;
                  },
                  maxLines: 1,
                  decoration: InputDecoration(
                    enabled: _editMode,
                    hintText: kCreateRegionHint,
                    hintStyle: TextStyleConfig.getBody2StyleFixedSize(
                      color: ColorsConfig.naturalGray40,
                    ),
                    filled: true,
                    fillColor: MaterialStateColor.resolveWith(_getFillColor),
                    hoverColor: Colors.transparent,
                    //isDense: true,
                    //fillColor: ColorsConfig.coolGray10,
                    contentPadding:
                        const EdgeInsets.symmetric(vertical: 8, horizontal: 12),
                    border: MaterialStateOutlineInputBorder.resolveWith(
                        _getInputBorderForRegionField),
                    // isCollapsed: true,
                  ),
                  style: TextStyleConfig.getBody2StyleFixedSize(
                    color: ColorsConfig.neutralGrey,
                  ),
                ),
              ],
            ),
          ),
          const SizedBox(width: 16),
          // LOCATION
          SizedBox(
            width: 240,
            child: Column(
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                // LABEL
                Row(
                  children: [
                    Text(
                      kSelectLocLabel,
                      style: TextStyleConfig.getUserConvoBody2Style().copyWith(
                          color: _editMode
                              ? ColorsConfig.naturalGray
                              : ColorsConfig.naturalGray50,
                          height: 1.25),
                    ),
                    const SizedBox(width: 2),
                    Text(
                      ' *',
                      style: TextStyleConfig.getUserConvoBody2Style().copyWith(
                          color: _editMode
                              ? ColorsConfig.deleteRed
                              : ColorsConfig.naturalGray50,
                          height: 1.25),
                    ),
                  ],
                ),
                const SizedBox(height: 4),
                // FIELD
                SizedBox(
                  height: 40,
                  child: DropDownSearch(
                    //key: ValueKey(widget.idx),
                    selectedItems: _selLocations,
                    itemRepr: (i) => i.toString(),
                    //onChangedSelection: (val) => _selLocations = val,
                    onChangedSelection: _onChangedLocations,
                    tagId: '${widget.idx}-REGION-FORM-FIELD',
                    totalItems: widget.totalCenters,
                    dropDownMenuMaxHeight: kLocationDropDownMaxHeight,
                    enabled: _editMode,
                    width: 240,
                    getItems: ({String filter, int page}) =>
                        _getDDItems(search: filter),
                  ),
                ),
              ],
            ),
          ),
          const SizedBox(width: 24),
          // EDIT
          Container(
            margin: EdgeInsets.only(top: 18),
            //padding: EdgeInsets.all(8),
            child: InkWell(
              onTap: _editMode ? null : _onEdit,
              child: Icon(
                Icons.edit_outlined,
                size: 24,
                color:
                    _editMode ? ColorsConfig.naturalGray40 : ColorsConfig.blue50,
              ),
            ),
          ),
          const SizedBox(width: 10),
          // DELETE
          Container(
            //padding: EdgeInsets.all(8),
            margin: EdgeInsets.only(top: 18),
            child: InkWell(
              onTap: widget.onDelete,
              child: Icon(
                Icons.delete_outlined,
                size: 24,
                color: ColorsConfig.dangerRed50,
              ),
            ),
          ),
          const SizedBox(width: 10),
        ],
      ),
    );
  }
}
